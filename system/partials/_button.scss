@mixin button {
  button[class*="ds-button"] {
    border: 0;
    cursor: pointer;
    color: $white;
    background-color: $pinkForWhite;
    font-size: $s2;
    padding: $ss5 $s2;
    border-bottom: $ss3 solid $black;
  }

  button[class*="ds-button"]:active:not([disabled]) {
    position: relative;
    top: $ss3;
    border-bottom: 0;
    outline: none;
    margin-bottom: $ss3;
  }

  button.ds-button-blue {
    background-color: $blueForWhite;
  }

  button[class*="ds-button"][disabled] {
    cursor: not-allowed;
    opacity: 0.666;
  }

  .ds-dark button[class*="ds-button"][disabled]:active {
    border-bottom-color: #000;
  }
}


/*
USE WITH CARE.

"links go somewhere, buttons do something" should remain true,
unless there is a very good reason to break this.

We can use this when it's very obvious what will happen if it's
pressed, and an `a` element can't be used.

For example Django uses HTTP POST for 'log out' to avoid automated
(e.g pre-fetch) GET requests from logging a user out. A link is
reasonable from a user's point of view, but we use a button for
technical reasons.

This isn't exposed as a component, to avoid ad-hoc use. It is used by higher order
components only.
*/
%link-button {
  border: 0;
  background: none;
  font-family: $familyMain;
  cursor: pointer;
}
